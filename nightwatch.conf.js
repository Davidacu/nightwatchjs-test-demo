// Autogenerated by Nightwatch
// Refer to the online docs for more details: https://nightwatchjs.org/gettingstarted/configuration/
const Services = {};
loadServices();

module.exports = {
  // An array of folders (excluding subfolders) where your tests are located;
  // if this is not specified, the test source must be passed as the second argument to the test runner.
  src_folders: [],

  // See https://nightwatchjs.org/guide/working-with-page-objects/
  page_objects_path: ["./page-objects", "./page-objects/conduit-page-objects"],

  // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-commands
  custom_commands_path: "",

  // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-assertions
  custom_assertions_path: "",

  // See https://nightwatchjs.org/guide/#external-globals
  globals_path: "",

  webdriver: {
    start_process: true,
    server_path: Services.chromedriver.path,
    port: 9515,
  },

  test_settings: {
    default: {
      disable_error_log: false,
      screenshots: {
        enabled: false,
        path: "screens",
        on_failure: true,
      },
      // Selenium Server is running locally and is managed by Nightwatch
      selenium: process.env.containerized
        ? {
            port: 4444,
            host: "selenium-hub",
          }
        : {
            port: 4444,
            start_process: true,
            server_path: Services.seleniumServer,
            cli_args: {
              "webdriver.chrome.driver": Services.chromedriver.path,
              //"webdriver.gecko.driver": geckoDriver.path,
              // "webdriver.ie.driver": ieDriver.path,
              //"webdriver.edge.driver": edgeDriver.path,
            },
          },
    },
    chrome: {
      desiredCapabilities: {
        browserName: "chrome",
        "goog:chromeOptions": {
          w3c: false,
          args: [
            "--no-sandbox",
            "start-maximized",
            "--window-size=1920,1080",
            "--ignore-certificate-errors",
            "--allow-insecure-localhost",
            "enable-automation",
            "--disable-gpu",
            "--verbose",
          ],
        },
      },
    },
    firefox: {
      desiredCapabilities: {
        browserName: "firefox",
        alwaysMatch: {
          // Enable this if you encounter unexpected SSL certificate errors in Firefox
          // acceptInsecureCerts: true,
          "moz:firefoxOptions": {
            args: [
              // '-headless',
              // '-verbose'
            ],
          },
        },
      },
    },
  },
};

function loadServices() {
  try {
    Services.seleniumServer = require("selenium-server").path;
  } catch (err) {}

  try {
    Services.chromedriver = require("chromedriver");
  } catch (err) {}

  try {
    Services.geckodriver = require("geckodriver");
  } catch (err) {}
}
